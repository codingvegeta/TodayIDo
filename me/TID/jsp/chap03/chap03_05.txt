request 기본 객체

-클라이언트 정보 및 서버 정보 읽기
request 기본 객체는 웹 브라우저 클라이언트가 전송한 정보와 서버정보를 구할 수 있는 메서드를 제공하고 있다.
requestInfo.jsp 를 실행시켜서 확인해보자.

http://(localhost):(8080)/chap03/requestInfo.jsp
        serverName: ServerPort/ RequestURI

-요청 파라미터 처리("/form.jsp")
HTML 폼과 요청 파라미터
<input> 태그는 폼의 입력요소를 생성한다.
<input> 태그 속성 name은 "name" 이고 <input> 태그의 name 속성은 "address" 인데
name 속성의 값이 입력 요소의 이름이 된다.

/getParameter /String / 이름이 name인 파라미터의 값을 구한다. 존재하지 않을경우 null
/getParameterValues(String name) / String[] / 이름이 name인 모든 파라미터의 값을 배열로 구한다. 존재하지 않을경우 null
/getParameterNames() /Enumeration/ 웹 브라우저가 전송한 파라미터의 이름 목록을 구한다.
/getParameterMap() /Map /<파라미터이름,값> 쌍으로 구성된다.
viewParameter.jsp 를 실행시켜보자


-GET 방식 전송과 POST 방식 전송
웹 브라우저는 GET 방식과 POST 방식의 두가지 방식 중 한가지를 이용해서 파라미터를 전송한다.
<form> 태그의 메서드 속성값을 "get","post"로 지정 가능하다.
GET방식의 역우 URL의 경로 뒤에 ?뒤에 파라미터를 붙여 전송하며 이를 쿼리 "문자열" 이라고 한다.
각각의 파라미터는 & 기호로 구분하며 파라미터의 이름과 값은 =로 구분한다.
*인코딩해서 전달한다.*
GET 방식은 쿼리 문자열로 전송되기 때문에 폼을 사용하지 않아도 파라미터를 전송할 수 있다.

{http 프로토콜에 따르면 첫 번째 줄은 요청방식 (GET,POST)와 URI http 프로토콜 버전을 명시하도록 ㅗ디어있다.

GET 방식으로 요청 파라미터를 전송하는 경우 파라미터가 URI와 함께 전송된다.
POST방식은 데이터 영역을 이용해서 파라미터를 전송한다.
이 경우 데이터 영역에서 확인할 수 있다.

GET 방식의 경우 웹 컨테이너에 따라 전송할 수 있는 파라미터의 길의에 제한이 있을 수 있으나
POST 방식의 경우 웹 브라우저나 서버에 상관없이 전송할 수 있는 파라미터의 길이에 제한이 없다.

-요청 파라미터 인코딩
웹 브라우저는 웹 서버에 파라미터를 전송할 때 알맞은 캐릭터 셋을 이용해서 파라미터 값을 인코딩한다.
반대로 웹 서버는 알맞은 캐릭터셋을 이용해서 웹 브라우저가 전송한 파라미터 데이터를 디코딩한다.
브라우저가 UTF-8로 인코딩 했다면 서버도 UTF-8로 디코딩 해야 올바른 파라미터 값을 사용할 수 있다.

JSP는 request 기본 객체의 setCharacterEncoding() 메서드를 이용해서 파라미터 값을 기코딩 할 때 사용할 캐릭터 셋을 지정할 수 있다.
request.getParameter() 메서드나 request.getParameterValues() 메서드는 요청 파라미터의 값을 읽어올 때
request.setCharacterEncoding() 으로 지정한 캐릭터셋을 이용해서 디코딩한다.
만약 지정하지 않을경우 ISO-8859-1 캐릭터 셋을 기본으로 사용한다.